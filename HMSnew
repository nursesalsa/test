--[[ Hamster Ball Mobile Draggable Icon Controller (Final Version) ]]--

--===[ SERVICES ]===--
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Camera = workspace.CurrentCamera
local Players = game:GetService("Players")

local player = Players.LocalPlayer

--===[ CLEANUP ]===--
if player:FindFirstChild("PlayerGui") then
	local existingGui = player.PlayerGui:FindFirstChild("MobileControls")
	if existingGui then
		existingGui:Destroy()
	end
end

if _G.HamsterBallConnection and typeof(_G.HamsterBallConnection) == "RBXScriptConnection" then
	_G.HamsterBallConnection:Disconnect()
end

--===[ CHARACTER SETUP ]===--
local character = player.Character or player.CharacterAdded:Wait()
local ball = character:WaitForChild("HumanoidRootPart")
local humanoid = character:WaitForChild("Humanoid")

-- Ball appearance
ball.Shape = Enum.PartType.Ball
ball.Size = Vector3.new(5,5,5)
Camera.CameraSubject = ball

-- Disable collisions
for _, v in ipairs(character:GetDescendants()) do
	if v:IsA("BasePart") then
		v.CanCollide = false
	end
end

--===[ SETTINGS ]===--
local SPEED_MULTIPLIER = 30
local JUMP_POWER = 60
local JUMP_GAP = 0.3

--===[ RAYCAST SETUP ]===--
local params = RaycastParams.new()
params.FilterType = Enum.RaycastFilterType.Blacklist
params.FilterDescendantsInstances = {character}

--===[ MOVEMENT STATE ]===--
local moving = {
	forward = false,
	backward = false,
	left = false,
	right = false
}

--===[ GUI SETUP ]===--
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "MobileControls"
screenGui.ResetOnSpawn = true
screenGui.Parent = player:WaitForChild("PlayerGui")

local function createButton(name, pos, icon, callback)
	local button = Instance.new("TextButton")
	button.Name = name
	button.Size = UDim2.new(0, 60, 0, 60)
	button.Position = pos
	button.BackgroundColor3 = Color3.fromRGB(255, 165, 0)
	button.Text = icon
	button.Font = Enum.Font.GothamBold
	button.TextColor3 = Color3.new(1, 1, 1)
	button.TextScaled = true
	button.Parent = screenGui
	button.AutoButtonColor = true
	button.Active = true
	button.Draggable = true

	Instance.new("UICorner", button).CornerRadius = UDim.new(0, 8)

	button.MouseButton1Down:Connect(function()
		callback(true)
	end)
	button.MouseButton1Up:Connect(function()
		callback(false)
	end)
end

-- Movement buttons
createButton("Up", UDim2.new(0.1, 0, 0.7, 0), "â¬†", function(state) moving.forward = state end)
createButton("Left", UDim2.new(0.02, 0, 0.8, 0), "â¬…", function(state) moving.left = state end)
createButton("Right", UDim2.new(0.18, 0, 0.8, 0), "âž¡", function(state) moving.right = state end)
createButton("Down", UDim2.new(0.1, 0, 0.9, 0), "â¬‡", function(state) moving.backward = state end)

-- Jump button
createButton("Jump", UDim2.new(0.88, 0, 0.8, 0), "ðŸ”¼", function(state)
	if state then
		local result = workspace:Raycast(
			ball.Position,
			Vector3.new(0, -((ball.Size.Y / 2) + JUMP_GAP), 0),
			params
		)
		if result then
			ball.Velocity = ball.Velocity + Vector3.new(0, JUMP_POWER, 0)
		end
	end
end)

--===[ MOVEMENT LOOP ]===--
local connection = RunService.RenderStepped:Connect(function(delta)
	ball.CanCollide = true
	humanoid.PlatformStand = true

	if UserInputService:GetFocusedTextBox() then return end

	-- PC input
	if UserInputService:IsKeyDown(Enum.KeyCode.W) then
		ball.RotVelocity -= Camera.CFrame.RightVector * delta * SPEED_MULTIPLIER
	end
	if UserInputService:IsKeyDown(Enum.KeyCode.A) then
		ball.RotVelocity -= Camera.CFrame.LookVector * delta * SPEED_MULTIPLIER
	end
	if UserInputService:IsKeyDown(Enum.KeyCode.S) then
		ball.RotVelocity += Camera.CFrame.RightVector * delta * SPEED_MULTIPLIER
	end
	if UserInputService:IsKeyDown(Enum.KeyCode.D) then
		ball.RotVelocity += Camera.CFrame.LookVector * delta * SPEED_MULTIPLIER
	end

	-- Mobile input
	if moving.forward then
		ball.RotVelocity -= Camera.CFrame.RightVector * delta * SPEED_MULTIPLIER
	end
	if moving.left then
		ball.RotVelocity -= Camera.CFrame.LookVector * delta * SPEED_MULTIPLIER
	end
	if moving.backward then
		ball.RotVelocity += Camera.CFrame.RightVector * delta * SPEED_MULTIPLIER
	end
	if moving.right then
		ball.RotVelocity += Camera.CFrame.LookVector * delta * SPEED_MULTIPLIER
	end
end)

-- Save to global to avoid duplicate connections
_G.HamsterBallConnection = connection

--===[ CLEANUP ON DEATH ]===--
humanoid.Died:Connect(function()
	connection:Disconnect()
end)
